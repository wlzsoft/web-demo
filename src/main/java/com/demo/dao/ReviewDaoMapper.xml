<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.ReviewDao">
	
	  <insert id="savaUserExcerciseDetail" parameterType="com.demo.entity.UserExerciseDetailEntity">
	  	 INSERT INTO userExerciseDetail(
				userId,
				cardId,
				pointId,
				exerciseDate,
				startExerciseTime,
				endExerciseTime,
				exerciseUpshot
		)VALUES(
				#{userId},
				#{cardId},
				#{pointId},
				#{exerciseDate},
				#{startExerciseTime},
				#{endExerciseTime},
				#{exerciseUpshot}
		)
	  
	  </insert>
	  
	  <update id="updateLorePointExerciseDetail" parameterType="com.demo.dto.PointExerciseDetailDto">
	  		 UPDATE pointExerciseDetail set
			   nextExerciseTime=#{nextExerciseTime},
			   exerciseCycle=#{exerciseCycle},
			   conCorrectNumber=#{conCorrectNumber},
			   conErrorNumber=#{conErrorNumber},
			   lastExerciseDate=#{lastExerciseDate},
			   exerciseNumber=#{exerciseNumber},
			   correctNumber=#{correctNumber},
			   errorNumber=#{errorNumber}
		     where pointId=#{pointId} and userId=#{userId}
	  </update>
	  
	  <select id="bookList" parameterType="java.lang.Integer" resultType="com.demo.dto.BookDto">
		  	SELECT 
		  	  t.id,
		  	  t.bookName,
		  	  t.sharedType,
		  	  t.updateDetailTime,
		  	  t.createId
		  	 FROM book  t ,userbook a
		  	 WHERE t.id = a.bookId
		  	    AND a.userId=#{userId}
		  	    ORDER BY t.id ASC
	  </select>
	  
	  
	 <select id="reviewPointAll" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
		  	SELECT t.id ,
		  		t.pointName,
		  		t.chapterId,
		  		t.number,
		  		t.bookId
		  	FROM
			  point t ,
			  pointExerciseDetail a
			WHERE a.bookId=#{bookId}
			  AND t.id = a.pointId 
			  AND t.number>0
			  AND a.userId=#{userId}
			ORDER BY t.chapterSort,a.pointId asc 
			<!-- a.nextExerciseTime, -->
	  </select>
	  
	  <select id="reviewPoint" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
		  	SELECT t.id ,
		  		t.pointName,
		  		t.chapterId,
		  		t.number,
		  		t.bookId
		  	FROM
			  point t ,
			  pointExerciseDetail a
			WHERE a.bookId=#{bookId}
				  <if test="chapterId !=null and chapterId !='' ">
				      and t.chapterId in 
				      <foreach collection="chapterId" item="id" index="index" open="(" close=")" separator=",">
						#{id}
					  </foreach>
				  </if>
			  AND t.id = a.pointId 
			  AND t.number>0
			  AND a.userId=#{userId}
			  AND a.nextExerciseTime is not NULL
			  AND a.nextExerciseTime <![CDATA[ <= ]]> NOW()
			ORDER BY t.chapterSort, t.sort  asc 
	  </select>
	  
	  
	  <select id="reviewPointNull" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
		  	SELECT t.id ,
		  		t.pointName,
		  		t.chapterId,
		  		t.number,
		  		t.bookId
		  	FROM
			  point t ,
			  pointExerciseDetail a
			WHERE a.bookId=#{bookId}
			  <if test="chapterId !=null and chapterId !='' ">
			      and t.chapterId in 
			      <foreach collection="chapterId" item="id" index="index" open="(" close=")" separator=",">
					#{id}
				  </foreach>
			  </if>
			  AND t.id = a.pointId 
			  AND t.number>0
			  AND a.userId=#{userId}
			  AND a.nextExerciseTime is NULL
			ORDER BY t.chapterSort, t.sort  asc 
	  </select>
	  
	  <select id="reviewPointBefore" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
		  	SELECT t.id ,
		  		t.pointName,
		  		t.chapterId,
		  		t.number,
		  		t.bookId
		  	FROM
			  point t ,
			  pointExerciseDetail a
			WHERE a.bookId=#{bookId}
				  <if test="chapterId !=null and chapterId !='' ">
				      and t.chapterId in 
				      <foreach collection="chapterId" item="id" index="index" open="(" close=")" separator=",">
						#{id}
					  </foreach>
				  </if>
			  AND t.id = a.pointId 
			  AND t.number>0
			  AND a.userId=#{userId}
			  AND a.nextExerciseTime <![CDATA[ > ]]> NOW()
			ORDER BY t.chapterSort, t.sort asc 
	  </select>
	  
	  <select id="roundCard" parameterType="java.lang.Integer" resultType="com.demo.dto.CardDto">
          select t.id,t.pointId ,b.pointName ,t.questionType,t.titleVoiceSrc,t.titleVoiceFlag,
                t.difficultyLevel,t.titleText,t.questionText,t.questionImages,t.answers
          from card t ,point b  
          where  t.pointId=b.id and t.pointId=#{pointId} AND b.number>0
       </select> 
       
       <select id="roundPoint" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
	     SELECT t.id,t.pointName,t.number,t.chapterId ,t.bookId
	         FROM point t ,pointExerciseDetail a
	          WHERE t.id=a.pointId 
	          AND t.number>0
	          AND a.userId=#{userId}
	          AND a.pointId not in
				<foreach collection="pointIdArray" item="id" index="index" open="(" close=")" separator=",">
					#{id,jdbcType=INTEGER}
				</foreach>
	   </select>
	   
	   <select id="roundPointByUserId" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
	     SELECT t.id,t.pointName,t.number,t.chapterId ,t.bookId
	         FROM point t ,pointExerciseDetail a
	          WHERE t.id=a.pointId 
	          AND t.number>0
	          AND a.userId=#{userId}
	   </select>
	   
	   <select id="getAuthByPointId" parameterType="java.lang.Integer" resultType="com.demo.dto.PointExerciseDetailDto">
	       SELECT * FROM pointexercisedetail t WHERE t.pointId=#{pointId} AND t.userId=#{userId}
	   </select>
	   
	   <select id="getAuthByBookId" parameterType="java.lang.Integer" resultType="com.demo.dto.PointExerciseDetailDto" >
	        SELECT * FROM pointexercisedetail t WHERE t.bookId=#{bookId} AND t.userId=#{userId}
	   </select>
	  
</mapper>