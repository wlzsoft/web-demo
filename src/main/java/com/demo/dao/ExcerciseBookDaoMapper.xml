<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.ExcerciseBookDao">
	
	<insert id="excerciseSava" parameterType="com.demo.entity.ExcerciseBookEntity" useGeneratedKeys="true" keyProperty="id">
			INSERT INTO book(
					bookName,
					language,
					area,
					sharedType,
					createTime,
					createId,
					remark
			)VALUES(
					#{bookName},
					#{language},
					#{area},
					#{sharedType},
					#{createTime},
					#{createId},
					#{remark}
			)
	</insert>
	
	<delete id="delExcerciseById">
		DELETE FROM  book  WHERE  id=#{bookId}
	</delete>
	
	<update id="editExcercise" parameterType="com.demo.entity.ExcerciseBookEntity">
		 UPDATE book set
			   <if test="bookName !=null" >bookName=#{bookName},</if>
			   <if test="language !=null">language=#{language},</if>
			   <if test="sharedType !=null">sharedType=#{sharedType},</if>
			   <if test="area !=null">area=#{area},</if>
			   <if test="remark !=null">remark=#{remark},</if>
			   <if test="updateTime !=null">updateTime=#{updateTime},</if>
			   <if test="updateId !=null">updateId=#{updateId}</if>
		   WHERE id=#{id}
	</update>
	
	<select id="findExcerciseId" parameterType="java.lang.Integer" resultType="com.demo.entity.ExcerciseBookEntity">
		select * from book t where t.id=#{bookId}
	</select>
	
	<select id="findBookById" parameterType="java.lang.Integer" resultType="com.demo.dto.BookDto">
	   select 
			t.id ,
			t.bookName,
			t.`language`,
			t.area ,
			t.sharedType,
			t.createId,
			t.remark,
			a.username AS createName
		from book t ,userinfo a  where  t.createId=a.id and t.id=#{bookId}
	</select>
	
	<select id="searchAllExcercise" resultType="com.demo.dto.BookDto">
		select 
			t.id ,
			t.bookName,
			t.`language`,
			t.area ,
			t.sharedType,
			t.createId,
			t.remark
		from book t  ,userbook a where a.bookId=t.id and a.userId=#{userId}
	</select>
	
	
	<select id="getOpenBook" resultType="com.demo.dto.BookDto">
	  select 
			t.id ,
			t.bookName,
			t.`language`,
			t.area ,
			t.sharedType,
			t.createId,
			t.remark,
			a.username AS createName
		from book t ,userinfo a  where sharedType=1 AND t.createId=a.id
	</select>
	
	
	<select id="findExcerciseIdToPonit" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
			SELECT t.id,t.pointName,t.chapterId,t.number,t.bookId FROM point t
			 WHERE t.bookId=#{bookId}
	</select>
	
	<select id="bookProgress" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	    SELECT COUNT(*) progress FROM pointExerciseDetail t WHERE t.userId=#{userId}  AND t.bookId=#{bookId}
	</select>
	
	<select id="bookProgressYes" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	   SELECT COUNT(*) progress FROM pointExerciseDetail t WHERE t.userId=#{userId}  AND t.bookId=#{bookId} AND t.exerciseNumber>0
	</select>
	
	<select id="findBookByPointId" parameterType="java.lang.Integer" resultType="com.demo.entity.ExcerciseBookEntity">
		SELECT a.* FROM book a ,point b
 			WHERE a.id =b.bookId
  			 AND b.id=#{pointId}
	</select>
	
	<select id="findBookByCardId" parameterType="java.lang.Integer" resultType="com.demo.entity.ExcerciseBookEntity" >
	    SELECT a.* FROM book a ,point b ,card c
            WHERE c.pointId=b.id
		     AND b.bookId=a.id
		     AND c.id=#{cardId}
	</select>
	
	<update id="updateDetail" >
		 UPDATE book set
			  updateDetailTime=#{updateDetailTime},
			  updateDetailId=#{updateDetailId}
		   WHERE id=#{bookId}
	</update>
	

     
</mapper>