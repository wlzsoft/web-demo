<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserBookDao">

	<insert id="addUserBook" parameterType="com.pmp.entity.UserBookEntity">
		  INSERT INTO userbook(
					userId,
					bookId,
					subTime,
					createTime,
					createId
			)VALUES(
					#{userId},
					#{bookId},
					#{subTime},
					#{createTime},
					#{createId}
			)
	</insert>
	
	<update id="updateUserBook" parameterType="hashmap">
	    update userbook set progress=#{progress} ,lastTime=#{lastTime}  where userId=#{userId} and bookId=#{bookId}
	</update>
	
	<update id="updateUser_Book" parameterType="com.pmp.entity.UserBookEntity">
        UPDATE userbook set
                <if test="hidden !=null" >hidden=#{hidden},</if>
               <if test="dailyGoal !=null" > dailyGoal=#{dailyGoal},</if>
               <if test="remark !=null" > remark=#{remark},</if>
               <if test="notification !=null" > notification=#{notification},</if>
               <if test="notificationTime !=null" > notificationTime=#{notificationTime},</if>
			   updateTime=#{updateTime},
			   updateId=#{updateId}
        WHERE userId=#{userId} and bookId=#{bookId}
     </update>
	
	<delete id="delUserBookById" parameterType="java.lang.Integer">
	   delete from userbook  where id=#{id}
	</delete>
	
	<delete id="delUserBookByBookId" parameterType="java.lang.Integer">
	   delete from userbook  where bookId=#{bookId}
	</delete>
	
	<delete id="delUserBook" parameterType="java.lang.Integer">
	   delete from userbook  where bookId=#{bookId} and userId=#{userId}
	</delete>
	
	<select id="findUser" parameterType="java.lang.Integer" resultType="com.pmp.entity.UserBookEntity">
	   select * from userBook t where t.bookId=#{bookId}
	</select>
	
    <select id="findUser_userId_bookId" parameterType="java.lang.Integer" resultType="com.pmp.entity.UserBookEntity">
	   select * from userBook t where t.bookId=#{bookId} and t.userId=#{userId}
	</select>
	
	<select id="findUserBook" parameterType="java.lang.Integer" resultType="com.demo.dto.UserBookDto">
	   select 
	     t.bookId,
	     a.bookName,   
	     t.lastTime,
	     t.dailyGoal,
	     t.hidden, 
	     t.remark,
	     t.notification,
	     t.notificationTime
	   from userBook t ,book a 
	   where a.id = t.bookId
	     and t.bookId=#{bookId} 
	     and t.userId=#{userId}
	</select>
    
    <select id="findUserBookList" parameterType="java.lang.Integer" resultType="com.pmp.entity.UserBookEntity">
        select * from userbook where userId=#{userId}
    </select>
    
    <select id="findUserPointList" parameterType="java.lang.Integer" resultType="com.pmp.entity.PointEntity">
        SELECT b.* FROM userbook a ,point b WHERE a.bookId=b.bookId AND a.userId=#{userId}
    </select>
    
</mapper>