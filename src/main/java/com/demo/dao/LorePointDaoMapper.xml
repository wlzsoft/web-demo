<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.LorePointDao">
	
	<insert id="install" parameterType="com.demo.entity.LorePointEntity" useGeneratedKeys="true" keyProperty="id">
			INSERT INTO point(
					pointName,
					bookId,
					chapterId,
					number,
					chapterSort,
					sort,
					createTime,
					createId
			)VALUES(
					#{pointName},
					#{bookId},
					#{chapterId},
					#{number},
					#{chapterSort},
					#{sort},
					#{createTime},
					#{createId}
			)
	</insert>
	
   <insert id="batchAdd" parameterType="java.util.List">
	      INSERT INTO point( 
					pointName,
					bookId,
					chapterId,
					number,
					chapterSort,
					sort,
					createTime,
					createId
			)VALUES
			<foreach collection="entityList" item="item" index="index" separator=",">
				(#{item.pointName},
				 #{item.bookId},
				 #{item.chapterId},
				 #{item.number},
				 #{chapterSort},
				 #{item.sort},
				 #{item.createTime},
				 #{item.createId}
				)
			</foreach>
	</insert>
	
	<insert id="addPointDetail" parameterType="com.demo.entity.LorePointExerciseDetailEntity">
		  INSERT INTO pointExerciseDetail( 
					userId,
					exerciseCycle,
					pointId,
					bookId,
					nextExerciseTime
			)VALUES(
					#{userId},
					#{exerciseCycle},
					#{pointId},
					#{bookId},
					#{nextExerciseTime}
			)
	</insert>
	
	<!-- <select id="addPointDetailList" parameterType="com.demo.entity.LorePointExerciseDetailEntity"> -->
	<select id="addPointDetailList" parameterType="java.util.List">
	      INSERT INTO pointExerciseDetail( 
					userId,
					exerciseCycle,
					pointId,
					bookId,
					skilled,
					nextExerciseTime,
					state
			)VALUES
			<foreach collection="entityList" item="item" index="index" separator=",">
				(#{item.userId},
				 #{item.exerciseCycle},
				 #{item.pointId},
				 #{item.bookId},
				 #{item.skilled},
				 #{item.nextExerciseTime},
				 #{item.state}
				)
			</foreach>
	</select>
	
	
	<delete id="dellById" parameterType="java.lang.Integer">
		DELETE FROM  point  WHERE  id=#{id}
	</delete>
	
	<delete id="delPointByBookId" parameterType="java.lang.Integer">
		DELETE FROM  point  WHERE  bookId=#{bookId}
	</delete>
	
	
	<delete id="delPoinDetailtByPointId" parameterType="java.lang.Integer">
	    DELETE FROM  pointExerciseDetail  WHERE  pointId=#{pointId}
	</delete>
		
	<delete id="delPoinDetailtByBookId" parameterType="java.lang.Integer">
	   DELETE FROM  pointExerciseDetail where  bookId=#{bookId}
	</delete>
	
	<update id="update" parameterType="com.demo.entity.LorePointEntity">
		 UPDATE point set
			   <if test="pointName !=null" >pointName=#{pointName},</if>
			   <if test="number !=null">number=#{number},</if>
			   <if test="chapterSort !=null">chapterSort=#{chapterSort},</if>
			   <if test="chapterId !=null">chapterId=#{chapterId},</if>
			   <if test="sort !=null">sort=#{sort},</if>
			   <if test="updateTime !=null">updateTime=#{updateTime},</if>
			   <if test="updateId !=null">updateId=#{updateId}</if>
	    where id=#{id}
	</update>

	<update id="batchUpdate" parameterType="java.lang.Integer">
         UPDATE point t SET  t.chapterId=#{chapterId} WHERE
		 id  in
		<foreach collection="pointIdArray" item="id" index="index" open="(" close=")" separator=",">
			#{id,jdbcType=INTEGER}
		</foreach>

	</update>
	
	<select id="findById" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
		select * from  point t where t.id=#{id}
	</select>
	
	<select id="findLorePoint" parameterType="java.lang.Integer" resultType="com.demo.entity.LorePointEntity">
		select * from  point t where t.id=#{id}
	</select>
	
	<select id="searchAllLorePoint" resultType="com.demo.dto.PonitDto">
		select t.id,t.pointName,t.number,t.bookId ,t.sort from  point t
	</select>
	
	<select id="findPointIdByDetail" parameterType="java.lang.Integer" resultType="com.demo.dto.PointExerciseDetailDto">
		SELECT t.userId ,
			 t.bookId,
			 a.pointName,
			 a.sort,
			 a.chapterSort,
             t.nextExerciseTime,
             t.exerciseCycle,
			 t.conCorrectNumber,
			 t.conErrorNumber,
			 t.firstExerciseDate,
			 t.lastExerciseDate,
			 t.exerciseNumber,
			 t.correctRate,
			 t.correctNumber,
			 t.errorNumber,
			 t.skilled,
			 t.avgConsumingTime,
			 t.state
		FROM pointExerciseDetail t ,point a 
		WHERE  a.id=t.pointId
		    AND t.pointId=#{id}
		    AND t.userId=#{userId}
	</select>
	
	<select id="pointIdByDetail" parameterType="java.lang.Integer" resultType="com.demo.dto.PointExerciseDetailDto">
		SELECT t.* FROM pointExerciseDetail t  WHERE t.pointId=#{pointId} and t.userId=#{userId}
	</select>
	
	<select id="roundPoint" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitDto">
	   SELECT t.id,t.pointName,t.number,t.chapterId ,t.bookId,t.sort ,a.state FROM point t ,pointExerciseDetail a WHERE t.id=a.pointId AND a.userId=#{userId}
	</select>
	
	<update id="updatePointChapterSort" parameterType="java.lang.Integer">
		UPDATE point t set t.chapterSort=#{chapterSort} WHERE t.bookId=#{bookId} AND t.chapterId=#{chapterId}
	</update>
	
	<update id="updateDelPointChapterSort" parameterType="java.lang.Integer">
	   UPDATE point t set t.chapterId=0 ,t.chapterSort=0 
	     WHERE t.bookId=#{bookId} 
	       AND t.chapterId NOT IN
	       <foreach collection="chapterIds" item="chapterId" index="index" open="(" close=")" separator=",">
			#{chapterId}
		</foreach>
	</update>
	
    <update id="updateDelPointChapterSortAll" parameterType="java.lang.Integer">
	   UPDATE point t set t.chapterId=0 ,t.chapterSort=0 
	     WHERE t.bookId=#{bookId} 
	</update>
	
	<select id="findBookIdToPonit" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitSkilledDto">
			SELECT t.id,t.pointName,t.chapterId,t.number,t.bookId ,a.hidden,
			       t.sort,t.chapterSort,a.exerciseCycle,a.skilled ,
			       a.state 
			FROM point t ,pointExerciseDetail a 
			WHERE t.id=a.pointId 
			  and  t.bookId=#{bookId} 
			  and a.userId=#{userId}
	</select>
	
	<select id="findBookIdToPonit_card" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitSkilledDto">
			SELECT t.id,t.pointName,t.chapterId,t.number,t.bookId ,a.hidden,
			       t.sort,t.chapterSort,a.exerciseCycle,a.skilled ,
			       a.state 
			FROM point t ,pointExerciseDetail a 
			WHERE t.id=a.pointId 
			  and t.number>0
			  and  t.bookId=#{bookId} 
			  and a.userId=#{userId}
	</select>
	
    <select id="findBookIdToPonit_ex" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitSkilledDto">
			SELECT t.id,t.pointName,t.chapterId,t.number,t.bookId ,a.hidden,
			       t.sort,t.chapterSort,a.exerciseCycle,a.skilled ,
			       a.state 
			FROM point t ,pointExerciseDetail a 
			WHERE t.id=a.pointId 
			   and t.number>0
			   and a.state in (1,2)
			   and  t.bookId=#{bookId} 
			   and a.userId=#{userId}
	</select>
	
	
	<select id="searchLorePointByBookId" parameterType="java.lang.Integer" resultType="com.demo.dto.PonitSkilledDto">
		select t.id,t.pointName,t.chapterId,t.number,t.bookId , t.sort,t.chapterSort 
		  from  point t ,book a where a.id=t.bookId and a.id=#{bookId}
	</select>
	
	
    <update id="hidePoint" parameterType="java.lang.Integer">
         UPDATE pointExerciseDetail t SET  t.hidden=#{state} WHERE
		    pointId  in
			<foreach collection="pointIdArray" item="id" index="index" open="(" close=")" separator=",">
				#{id,jdbcType=INTEGER}
			</foreach>
		  AND userId=#{userId}
	</update>
     
</mapper>